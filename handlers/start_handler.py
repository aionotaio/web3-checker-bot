from aiogram.filters import Command
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext

from src.db import AsyncMongoManager


router = Router()
async_mongo_manager = AsyncMongoManager()


@router.message(Command('start'))
async def cmd_start(message: types.Message) -> None:
    inline_keyboard = [
        [types.InlineKeyboardButton(text="üì• –î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="add_wallets")],
        [types.InlineKeyboardButton(text="üì§ –£–¥–∞–ª–∏—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="delete_wallets")],
        [types.InlineKeyboardButton(text="‚ùì –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã", callback_data="choose_projects")],
        [types.InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–ª–ª–æ–∫–∞—Ü–∏–∏", callback_data="check_wallets")]
    ]

    builder = types.InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

    user = message.from_user
    if user is None: 
        return
    
    content = f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{user.full_name}</b>! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å –∞–¥—Ä–µ—Å–∞ EVM-–∫–æ—à–µ–ª—å–∫–æ–≤ –∏ –≤—ã–±–µ—Ä–∏ –ø—Ä–æ–µ–∫—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∞–ª–ª–æ–∫–∞—Ü–∏—é."

    await async_mongo_manager.create_new_user(user.full_name, user.id)

    await message.answer(content, parse_mode="HTML", reply_markup=builder)

@router.callback_query(F.data == "go_back_with_remove")
async def go_back_with_remove(callback: types.CallbackQuery, state: FSMContext):
    msg = callback.message
    if msg is None: 
        return
    
    await msg.delete()
    
    inline_keyboard = [
        [types.InlineKeyboardButton(text="üì• –î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="add_wallets")],
        [types.InlineKeyboardButton(text="üì§ –£–¥–∞–ª–∏—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="delete_wallets")],
        [types.InlineKeyboardButton(text="‚ùì –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã", callback_data="choose_projects")],
        [types.InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–ª–ª–æ–∫–∞—Ü–∏–∏", callback_data="check_wallets")]
    ]

    builder = types.InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

    content = f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{callback.from_user.full_name}</b>! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å –∞–¥—Ä–µ—Å–∞ EVM-–∫–æ—à–µ–ª—å–∫–æ–≤ –∏ –≤—ã–±–µ—Ä–∏ –ø—Ä–æ–µ–∫—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∞–ª–ª–æ–∫–∞—Ü–∏—é."

    await msg.answer(content, parse_mode="HTML", reply_markup=builder)
    await callback.answer()

@router.callback_query(F.data == "go_back")
async def go_back(callback: types.CallbackQuery, state: FSMContext) -> None:
    msg = callback.message
    if msg is None: 
        return

    inline_keyboard = [
        [types.InlineKeyboardButton(text="üì• –î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="add_wallets")],
        [types.InlineKeyboardButton(text="üì§ –£–¥–∞–ª–∏—Ç—å –∫–æ—à–µ–ª—å–∫–∏", callback_data="delete_wallets")],
        [types.InlineKeyboardButton(text="‚ùì –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã", callback_data="choose_projects")],
        [types.InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–ª–ª–æ–∫–∞—Ü–∏–∏", callback_data="check_wallets")]
    ]

    builder = types.InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

    content = f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{callback.from_user.full_name}</b>! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å –∞–¥—Ä–µ—Å–∞ EVM-–∫–æ—à–µ–ª—å–∫–æ–≤ –∏ –≤—ã–±–µ—Ä–∏ –ø—Ä–æ–µ–∫—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∞–ª–ª–æ–∫–∞—Ü–∏—é."
    
    await msg.edit_text(content, parse_mode="HTML", reply_markup=builder)
    await callback.answer()
